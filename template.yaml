AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Lambda Apps for fetching and exposing data from personal WeatherLink and Netatmo Stations.'

Globals:
  Function:
    Timeout: 10

Parameters:
  DomainName:
    Type: String
    Default: weather.larcho.com
  CertificateArn:
    Type: String
  AwsDynamoDBTable:
    Type: String
    Default: weather-go
  WeatherLinkURL:
    Type: String
  NetatmoRefreshToken:
    Type: String
  NetatmoClientID:
    Type: String
  NetatmoClientSecret:
    Type: String
  NetatmoDeviceID:
    Type: String

Resources:
  DataApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Domain:
        DomainName:
          Ref: DomainName
        CertificateArn:
          Ref: CertificateArn

  NetatmoFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ./netatmo/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          AWS_DYNAMODB_TABLE:
            Ref: AwsDynamoDBTable
          NETATMO_REFRESH_TOKEN:
            Ref: NetatmoRefreshToken
          NETATMO_CLIENT_ID:
            Ref: NetatmoClientID
          NETATMO_CLIENT_SECRET:
            Ref: NetatmoClientSecret
          NETATMO_DEVICE_ID:
            Ref: NetatmoDeviceID
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(10 minutes)
  WeatherlinkFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ./weatherlink/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          AWS_DYNAMODB_TABLE:
            Ref: AwsDynamoDBTable
          WEATHERLINK_URL:
            Ref: WeatherLinkURL
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(10 minutes)
  ApiFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ./api/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          AWS_DYNAMODB_TABLE:
            Ref: AwsDynamoDBTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /data
            Method: get
            RestApiId:
              Ref: DataApi
